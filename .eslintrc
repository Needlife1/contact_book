{
    "env": {
        "browser": true
    },
    "settings": {
      "react": {
        "version": "detect"
      }
    },
    "extends": [
        "eslint:recommended",
        "plugin:react/recommended",
        "plugin:react/jsx-runtime",
        "plugin:react-hooks/recommended",
        "plugin:import/recommended",
        "plugin:import/typescript",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "plugin:prettier/recommended",
        "plugin:unicorn/recommended",
        "plugin:sonarjs/recommended"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaVersion": "latest",
        "sourceType": "module",
        "project": ["./tsconfig.json"]
    },
    "plugins": [
        "@typescript-eslint",
        "simple-import-sort",
        "@stylistic",
        "react-refresh"
    ],
    "ignorePatterns": ["dist"],
    "rules": {
      "no-restricted-syntax": [
        "error",
        {
          "selector": "SwitchCase > *.consequent[type!='BlockStatement']",
          "message": "Switch cases without blocks are forbidden."
        },
        {
          "selector": "ExportAllDeclaration,ImportAllDeclaration",
          "message": "Export/Import all (*) is forbidden."
        },
        {
          "selector": "ExportNamedDeclaration[declaration!=null]",
          "message": "Exports should be at the end of the file."
        },
        {
          "selector": "TSEnumDeclaration",
          "message": "TS enum declaration is forbidden, use object instead"
        },
        {
          "selector": "ImportDeclaration[importKind=type],ExportNamedDeclaration[exportKind=type]",
          "message": "Avoid import/export type { Type } from './module'. Prefer import/export { type Type } from './module'."
        }
      ],
      "max-params": ["error", 3],
      "no-multiple-empty-lines": ["error", { "max": 1 }],
      "curly": ["error", "all"],
      "simple-import-sort/imports": "error",
      "simple-import-sort/exports": "error",
      "import/no-unresolved": "off",
      "import/extensions": ["error", "always", { "ignorePackages": true }],
      "import/newline-after-import": ["error", { "count": 1 }],
      "import/no-default-export": "error",
      "unicorn/no-null": "off",
      "unicorn/explicit-length-check": "off",
      "unicorn/prevent-abbreviations": "off",
      "@typescript-eslint/consistent-type-definitions": "off",
      "@typescript-eslint/non-nullable-type-assertion-style": "off",
      "@typescript-eslint/return-await": ["error", "always"],
      "@typescript-eslint/consistent-type-imports": "error",
      "@typescript-eslint/consistent-type-exports": "error",
      "@typescript-eslint/explicit-function-return-type": ["error", { "allowTypedFunctionExpressions": true }],
      "@typescript-eslint/no-empty-interface": ["error", { "allowSingleExtends": true }],
      "@typescript-eslint/explicit-member-accessibility": "error",
      "@stylistic/object-curly-spacing": ["error", "always"],
      "@stylistic/padding-line-between-statements": [
        "error",
        { "blankLine": "never", "prev": "export", "next": "export" },
        { "blankLine": "always", "prev": ["const", "class"], "next": "export" }
      ],
      "react-refresh/only-export-components": [
        "warn",
        { "allowConstantExport": true }
      ],
      "react/prop-types": ["off"],
      "react/jsx-no-bind": [
        "error",
        { "ignoreRefs": true, "allowArrowFunctions": true }
      ]
    },
    "overrides": [
      {
        "files": ["vite.config.ts"],
        "rules": {
        "import/no-default-export": ["off"]
        }
      }
    ]
}
